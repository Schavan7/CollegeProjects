<!DOCTYPE html>
<!-- saved from url=(0057)https://notebooks.azure.com/Shrija/libraries/FinalProject -->
<html ng-app="notebooks" class="ng-scope gr__notebooks_azure_com"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><style type="text/css">[uib-typeahead-popup].dropdown-menu{display:block;}</style><style type="text/css">.uib-time input{width:50px;}</style><style type="text/css">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style><style type="text/css">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style><style type="text/css">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style><style type="text/css">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style><style type="text/css">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
    
    <meta name="google-site-verification" content="KbU3iN0xNAize9fZKStaAxmv3zSQKNGPNA8wBibCrZk">
    <meta name="google-site-verification" content="odGuUtT2NIcDQrKKLShBxd6RYuqFnizdyWffrkHlPzQ">
    <meta name="msvalidate.01" content="1FB238D982DEC598F9B856044DEA2D2B"> <!-- bing web master tools -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <meta name="description" content="Provides free online access to Jupyter notebooks running in the cloud on Microsoft Azure.">
    <meta name="keywords" content="IPython Microsoft Azure Jupyter notebooks online Python machine learning scientific computing technical computing workbook share sharing collaboration R F# FSharp anaconda pandas matplotlib jupyterlab ubuntu tutorial plot markdown">
    <title ng-bind="$root.page_title" class="ng-binding">FinalProject (Shrija) - Microsoft Azure Notebooks</title>
    <link href="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/Site.less" rel="stylesheet">

    <link href="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/ng-tags-input.min.less" rel="stylesheet">

    <link href="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/ng-tags-input.bootstrap.min.less" rel="stylesheet">


    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular.min.js"></script>
    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular-route.min.js"></script>
    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular-sanitize.min.js"></script>
    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular-cookies.min.js"></script>
    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular-messages.min.js"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/jquery"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/slick.min.js"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/typed.min.js"></script>


    <link rel="stylesheet" type="text/css" href="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/codemirror.css">

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular_site"></script><style>.sv-helper{position: fixed !important;z-index: 99999;margin: 0 !important;}.sv-candidate{}.sv-placeholder{}.sv-sorting-in-progress{-webkit-user-select: none;-moz-user-select: none;-ms-user-select: none;user-select: none;}.sv-visibility-hidden{visibility: hidden !important;opacity: 0 !important;}</style>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/angular-html"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/ui-bootstrap-tpls-2.1.4.min.js"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/ng-tags-input.min.js"></script>

    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/clipboard.min.js"></script>


    <!--<base href="/">--><base href=".">
    <noscript></noscript>
<script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/codemirror.js"></script><script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/python.js"></script><script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/markdown.js"></script><script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/r.js"></script></head>
<body ng-controller="SiteController as site" data-gr-c-s-loaded="true" class="ng-scope modal-open"><div uib-modal-window="modal-window" class="modal fade ng-scope ng-isolate-scope in" role="dialog" index="0" animate="animate" ng-style="{&#39;z-index&#39;: 1050 + $$topModalIndex*10, display: &#39;block&#39;}" tabindex="-1" uib-modal-animation-class="fade" modal-in-class="in" modal-animation="true" style="z-index: 1050; display: block;"><div class="modal-dialog "><div class="modal-content" uib-modal-transclude=""><div class="modal-content ng-scope">    <div class="modal-content">        <div class="modal-header">            <button type="button" class="close" aria-label="Close" ng-click="add.cancel()" title="Close">                <span aria-hidden="true">Ã—</span>            </button>            <div help-link="libraries/library-view/new-files" class="ng-isolate-scope"><a href="https://notebooks.azure.com/help/libraries/library-view/new-files" target="_blank" class="help-dialog-link">    <div class="question-circle" title="Help">?</div></a></div>            <h4 class="modal-title">Add Files to Library</h4>        </div>        <div class="modal-body">            <div class="row">                <div class="col-md-12">                    <div active="active" class="ng-isolate-scope">
  <ul class="nav nav-tabs" ng-class="{&#39;nav-stacked&#39;: vertical, &#39;nav-justified&#39;: justified}" ng-transclude="">                        <li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item ng-scope ng-isolate-scope active" uib-index="0" heading="New">
  <a href="https://notebooks.azure.com/" ng-click="select($event)" class="nav-link ng-binding" uib-tab-heading-transclude="">New</a>
</li>                        <li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item ng-scope ng-isolate-scope" uib-index="1" heading="From computer">
  <a href="https://notebooks.azure.com/" ng-click="select($event)" class="nav-link ng-binding" uib-tab-heading-transclude="">From computer</a>
</li>                        <li ng-class="[{active: active, disabled: disabled}, classes]" class="uib-tab nav-item ng-scope ng-isolate-scope" uib-index="2" heading="From URL">
  <a href="https://notebooks.azure.com/" ng-click="select($event)" class="nav-link ng-binding" uib-tab-heading-transclude="">From URL</a>
</li>                    </ul>
  <div class="tab-content">
    <!-- ngRepeat: tab in tabset.tabs --><div class="tab-pane ng-scope active" ng-repeat="tab in tabset.tabs" ng-class="{active: tabset.active === tab.index}" uib-tab-content-transclude="tab">
                                <add-file-blank library="add.library" path="add.pageController.path" class="ng-scope ng-isolate-scope"><form name="addFileForm" novalidate="" class="ng-dirty ng-valid-parse ng-valid ng-valid-required ng-valid-ipynb-needs-language ng-valid-filename-must-end-in-ipynb ng-valid-filename-invalid-characters">    <p class="input-header">File Name</p>    <input name="filename" ng-model="$ctrl.filename" type="text" placeholder="NewNotebook.ipynb, README.md, etc..." ng-blur="$ctrl.onBlurValidate()" class="input-field ng-not-empty ng-dirty ng-valid ng-valid-required ng-valid-filename-must-end-in-ipynb ng-valid-filename-invalid-characters ng-touched ng-valid-parse" required="" autofocus="">    <div ng-messages="addFileForm.filename.$error" ng-show="addFileForm.filename.$touched" class="ng-inactive">        <!-- ngMessage: required -->        <!-- ngMessage: filenameInvalidCharacters -->    </div>    <p class="input-header">File type</p>    <select name="language" ng-model="$ctrl.language" ng-options="(language.name + &#39; Notebook&#39;) for language in $ctrl.AddFileService.languages" ng-blur="$ctrl.onBlurValidate()" class="ng-valid ng-valid-ipynb-needs-language ng-not-empty ng-dirty ng-valid-parse ng-touched"><option value="" class="" selected="selected">Blank File</option><option label="Python 2.7 Notebook" value="object:149">Python 2.7 Notebook</option><option label="Python 3.5 Notebook" value="object:150">Python 3.5 Notebook</option><option label="Python 3.6 Notebook" value="object:151">Python 3.6 Notebook</option><option label="R Notebook" value="object:152">R Notebook</option><option label="F# Notebook" value="object:153">F# Notebook</option></select>    <div ng-messages="addFileForm.language.$error" class="ng-inactive">        <!-- ngMessage: ipynbNeedsLanguage -->    </div>    <!-- ngIf: $ctrl.status -->    <!-- ngIf: $ctrl.error -->    <!-- ngIf: $ctrl.urlConflict -->    <div class="modal-footer">        <button type="button" class="btn action-button btn-primary" ng-click="$ctrl.createNew($ctrl.language.name)" ng-disabled="!addFileForm.$valid" ng-class="addFileForm.$valid ? &#39;btn-primary&#39; : &#39;btn-inactive&#39;">            New        </button>        <button type="button" class="btn" ng-click="$ctrl.close()">Cancel</button>    </div></form></add-file-blank>                        </div><!-- end ngRepeat: tab in tabset.tabs --><div class="tab-pane ng-scope" ng-repeat="tab in tabset.tabs" ng-class="{active: tabset.active === tab.index}" uib-tab-content-transclude="tab">
                                <add-file-local library="add.library" path="add.pageController.path" class="ng-scope ng-isolate-scope"><form name="addFileForm" novalidate="" class="ng-pristine ng-valid">    <p class="local-desc">Choose files from your local computer to upload to your library. You can choose more than one file at a time.</p>    <ul id="upload-file-list">        <!-- ngRepeat: file in $ctrl.files -->    </ul>    <div class="fileUpload btn btn-primary">        <span>Choose files</span>        <input type="file" class="upload form-control ng-isolate-scope" id="newNotebookPath" multiple="" files="$ctrl.files" title="Choose files" file-change="$ctrl.updateFiles">    </div>    <div class="col-md-10">        <span id="addFileMessage">&nbsp;</span>    </div>    <div class="modal-footer pull-right">        <button type="button" id="local-btn" class="btn btn-primary" ng-click="$ctrl.upload()" ng-disabled="!addFileForm.$valid" ng-class="addFileForm.$valid ? &#39;btn-primary&#39; : &#39;btn-inactive&#39;">            Upload        </button>        <button type="button" class="btn" ng-click="$ctrl.close()">Cancel</button>    </div></form></add-file-local>                        </div><!-- end ngRepeat: tab in tabset.tabs --><div class="tab-pane ng-scope" ng-repeat="tab in tabset.tabs" ng-class="{active: tabset.active === tab.index}" uib-tab-content-transclude="tab">
                                <add-file-url library="add.library" path="add.pageController.path" class="ng-scope ng-isolate-scope"><form name="addFileForm" novalidate="" class="ng-pristine ng-invalid ng-invalid-required">    <p class="input-header">File Url</p>    <input name="uploadUrl" ng-model="$ctrl.uploadUrl" type="text" placeholder="URL" ng-blur="$ctrl.onBlur()" class="input-field ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required" required="">    <p class="input-header">File Name</p>    <input name="filename" ng-model="$ctrl.filename" type="text" placeholder="Destination Name" ng-blur="$ctrl.onBlurValidateFilename()" class="input-field ng-pristine ng-untouched ng-empty ng-invalid ng-invalid-required" required="">    <div ng-messages="addFileForm.filename.$error" ng-show="addFileForm.filename.$touched" class="ng-active ng-hide">        <!-- ngMessage: required --><div ng-message="required" class="ng-scope">Please enter a valid name</div>        <!-- ngMessage: filenameInvalidCharacters -->    </div>    <div ng-show="$ctrl.AddFileService.isMarkdown($ctrl.uploadUrl)" class="ng-hide">        <p class="input-header">Markdown Conversion</p>        <select ng-model="$ctrl.language" ng-options="&#39;Convert to notebook &#39; + language.name for language in $ctrl.AddFileService.languages" class="ng-pristine ng-untouched ng-valid ng-empty"><option value="" class="" selected="selected">Upload as markdown (None)</option><option label="Convert to notebook Python 2.7" value="object:149">Convert to notebook Python 2.7</option><option label="Convert to notebook Python 3.5" value="object:150">Convert to notebook Python 3.5</option><option label="Convert to notebook Python 3.6" value="object:151">Convert to notebook Python 3.6</option><option label="Convert to notebook R" value="object:152">Convert to notebook R</option><option label="Convert to notebook F#" value="object:153">Convert to notebook F#</option></select>    </div>    <!-- ngIf: $ctrl.status -->    <!-- ngIf: $ctrl.urlConflict -->    <div class="modal-footer">        <button type="button" class="btn btn-inactive" ng-click="$ctrl.uploadFromUrl()" ng-disabled="!addFileForm.$valid" ng-class="addFileForm.$valid ? &#39;btn-primary&#39; : &#39;btn-inactive&#39;" disabled="disabled">            Upload        </button>        <button type="button" class="btn" ng-click="$ctrl.close()">Cancel</button>    </div></form></add-file-url>                        </div><!-- end ngRepeat: tab in tabset.tabs -->
  </div>
</div>                </div>            </div>        </div></div></div></div></div>
</div><div uib-modal-backdrop="modal-backdrop" class="modal-backdrop fade ng-scope in" ng-style="{&#39;z-index&#39;: 1040 + (index &amp;&amp; 1 || 0) + index*10}" uib-modal-animation-class="fade" modal-in-class="in" modal-animation="true" style="z-index: 1040;"></div>
    
    <input name="__RequestVerificationToken" type="hidden" value="NVY39a48uDnRx9HQMKlDlZ6COzvhoV_bRC5H1UXsdxTtde7SGAnJ0CIX6a4wRFcTaERwOrYzPr2a_-BEaQNMheIu-GQDgPSsLztVatB0aZ9JB8f3OrcPMuMFjVX9KUbya-pV12j5Nu0vEZ02XJd3Mw2">

    <!-- BEGIN HEADER -->
<div class="header navbar-fixed-top">
    <div class="container brand-title">
        <a href="https://notebooks.azure.com/#" class="logo" ms.pgarea="header" ms.cmpgrp="header" ms.cmptyp="link" ms.cmpnm="" ms.title="Microsoft Azure" ms.interactiontype="1">
            <span class="logo-text">Microsoft Azure</span>
            <p class="notebooks-text">Notebooks</p>
        </a>
        <a href="https://notebooks.azure.com/help/preview" class="btn btn-preview">Preview</a>

        <div class="navbar-right desktop-navbar">
            <div class="account-nav">
                <!-- ngIf: site.getSignedIn() --><div ng-if="site.getSignedIn()" class="ng-scope">
                    <div uib-dropdown="" class="dropdown">
                        <div class="">
                            <a href="https://notebooks.azure.com/#" id="user-dropdown" uib-dropdown-toggle="" class="ng-binding dropdown-toggle" aria-haspopup="true" aria-expanded="false">
                                Shrija
                                <span class="glyphicon glyphicon-chevron-down account-chevron"></span>
                            </a>
                        </div>
                        <ul class="dropdown-menu account-menu" uib-dropdown-menu="" aria-labelledby="user-dropdown">
                            <li><a href="https://notebooks.azure.com/Shrija#" title="Main Menu Profile"><span class="notebook-icon-profile account-menu-icon"></span>Profile</a><hr></li>
                            <li><a href="https://notebooks.azure.com/account/settings#" title="Main Menu Settings"><span class="glyphicon glyphicon-cog account-menu-icon"></span>Settings</a></li>
                            <!-- ngIf: site.getSignedIn() --><li ng-if="site.getSignedIn()" class="ng-scope"><a href="https://notebooks.azure.com/account/signout" ng-click="site.signout()" title="Main Menu Sign Out"><span class="glyphicon glyphicon-log-out account-menu-icon"></span>Sign out</a></li><!-- end ngIf: site.getSignedIn() -->
                        </ul>
                    </div>
                </div><!-- end ngIf: site.getSignedIn() -->
                <!-- ngIf: !site.getSignedIn() -->
            </div>
            <!-- ngIf: site.UserService.user.generatedId -->
        </div>

        <span class="mobile-navbar">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse" title="Main Menu">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </span>
    </div>
    <div class="mobile-navbar">
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav nav-fade">
                <li><a href="https://notebooks.azure.com/Shrija/libraries#" class="nav-item" ng-href="/Shrija/libraries#" title="Main Menu Libraries">Libraries</a></li>
                <li><a href="https://notebooks.azure.com/new" class="nav-item" title="Main Menu What&#39;s New">What's New</a></li>
                <li><a href="https://notebooks.azure.com/status" ng-href="/status" class="nav-item" title="Site Status and History">Status</a></li>
                <li><a href="https://notebooks.azure.com/help/libraries/library-view" ng-href="/help/libraries/library-view" class="nav-item" title="Help and Documenation">Help</a></li>

                <!-- ngIf: site.getSignedIn() --><li ng-if="site.getSignedIn()" class="ng-scope"><a href="https://notebooks.azure.com/Shrija#" title="Main Menu Profile">Profile</a></li><!-- end ngIf: site.getSignedIn() -->
                <!-- ngIf: site.getSignedIn() --><li ng-if="site.getSignedIn()" class="ng-scope"><a href="https://notebooks.azure.com/account/settings#" title="Main Menu Settings">Settings</a></li><!-- end ngIf: site.getSignedIn() -->
                <!-- ngIf: site.getSignedIn() --><li ng-if="site.getSignedIn()" class="ng-scope"><a href="https://notebooks.azure.com/account/signout" ng-click="site.signout()" title="Main Menu Sign Out">Sign out</a></li><!-- end ngIf: site.getSignedIn() -->

                <!-- ngIf: !site.getSignedIn() -->

            </ul>
        </div>
    </div>
    <div class="navbar navbar-inverse cortana-top-nav desktop-navbar">
        <div class="container">
            <ul class="nav navbar-nav nav-fade">
                <li><a href="https://notebooks.azure.com/Shrija/libraries#" class="nav-item" ng-href="/Shrija/libraries#" title="Main Menu Libraries">Libraries</a></li>
                <li><a href="https://notebooks.azure.com/new#" class="nav-item" title="Main Menu What&#39;s New">What's New</a></li>
                <li><a href="https://notebooks.azure.com/status#" class="nav-item" title="Site Status and History">Status</a></li>
                <li><a href="https://notebooks.azure.com/help/libraries/library-view" ng-href="/help/libraries/library-view" class="nav-item" title="Help and Documenation">Help</a></li>
            </ul>
        </div>
    </div>
</div>

<!-- END HEADER -->


    <!-- BEGIN BODY -->

    
<!-- ngView: --><div ng-view="" class="ng-scope"><maybe-not-found display="!$ctrl.user.id || $ctrl.library == undefined" class="ng-scope ng-isolate-scope"><div>    <!-- ngIf: notFound.display -->    <!-- ngIf: !notFound.display --><div ng-if="!notFound.display" class="ng-scope">        <ng-transclude>    <div class="body-content info-page ng-scope">        <div class="jumbotron faq-header info-page-header jumbotron-with-breadcrumb-below">            <div class="container">                <h1 class="clip-text header-with-icon">                    <span class="notebook-icon-library header-icon"></span>                    <span ng-bind="$ctrl.library.name" class="header-text ng-binding">Final Project</span>                </h1>            </div>            <div class="container">                <!-- ngIf: !$ctrl.library.public -->                <!-- ngIf: $ctrl.library.clonedFrom -->                <!-- ngIf: $ctrl.library.gitRepositoryUrl -->            </div>        </div>        <div class="breadcrumb-holder">            <ul class="breadcrumb breadcrumb-below-jumbotron container">                <li>                    <a href="https://notebooks.azure.com/Shrija" ng-bind="$ctrl.library.owner || $ctrl.user.email" class="ng-binding">Shrija</a>                </li>                <li>                    <a href="https://notebooks.azure.com/Shrija/libraries">Libraries</a>                </li>                <li>                    <!-- ngIf: $ctrl.pathParts !== [] --><a ng-bind="$ctrl.library.id" ng-if="$ctrl.pathParts !== []" href="https://notebooks.azure.com/Shrija/libraries/FinalProject" class="ng-binding ng-scope">FinalProject</a><!-- end ngIf: $ctrl.pathParts !== [] -->                    <!-- ngIf: $ctrl.pathParts === [] -->                </li>                <!-- ngRepeat: part in $ctrl.pathParts -->                <!-- ngIf: $ctrl.library.isRunning --><li style="float:right" ng-if="$ctrl.library.isRunning" class="user-library-running ng-scope">Running</li><!-- end ngIf: $ctrl.library.isRunning -->            </ul>        </div>        <div class="container">            <!-- ngIf: $ctrl.errorText -->            <div paged-data="$ctrl" class="ng-isolate-scope"><div kb-shortcuts="$ctrl.keyBindings" focus-on="focusOnPagedDataPageChange" tabindex="-1" class="pagedData ng-isolate-scope">    <!-- Button bar -->    <div class="row" focus-on="dialogClosedButtonDisabled">        <div class="col-md-12">            <!-- ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><a class="btn btn-default user-library-button ng-scope" ng-if="button.type == &#39;link&#39; &amp;&amp; !((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" href="https://notebooks.azure.com/run/Shrija/FinalProject?dest=/notebooks/HousePricePrediction.ipynb" ng-click="button.click($ctrl.data.items.selected)" target="_blank" focus-on="button.focusOn" title="Please clone this library to run (Shortcut: r)">                        <span class="notebook-icon-run library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Run</span>                    </a><!-- end ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="focusOnNewNotebook" title="New (Shortcut: n)">                        <span class="notebook-icon-add library-button-icon"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">New</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="" title="Edit Library Settings (Shortcut: e)">                        <span class="glyphicon glyphicon-cog library-button-icon"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Settings</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="focusOnShareLibrary" title="Share Library (Shortcut: s)">                        <span class="notebook-icon-share library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Share</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="focusOnShareLibrary" title="Clone Library (Shortcut: c)">                        <span class="notebook-icon-create-clone library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Clone</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><a class="btn btn-default user-library-button ng-scope" ng-if="button.type == &#39;link&#39; &amp;&amp; !((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" href="https://notebooks.azure.com/Shrija/libraries/FinalProject/clones" ng-click="button.click($ctrl.data.items.selected)" target="" focus-on="button.focusOn" title="Clones (Shortcut: l)">                        <span class="notebook-icon-create-fork library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">0 Clones</span>                    </a><!-- end ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><a class="btn btn-default user-library-button ng-scope" ng-if="button.type == &#39;link&#39; &amp;&amp; !((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" href="https://notebooks.azure.com/run/Shrija/FinalProject?dest=/terminals/1" ng-click="button.click($ctrl.data.items.selected)" target="_blank" focus-on="button.focusOn" title="Open Terminal (Shortcut: t)">                        <span class="notebook-icon-terminal library-button-icon"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Terminal</span>                    </a><!-- end ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="" title="Shutdown Server (Shortcut: h)">                        <span class="glyphicon glyphicon-stop"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Shutdown</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><a class="btn btn-default user-library-button ng-scope" ng-if="button.type == &#39;link&#39; &amp;&amp; !((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" href="https://notebooks.azure.com/Shrija/libraries/FinalProject/html/HousePricePrediction.ipynb" ng-click="button.click($ctrl.data.items.selected)" target="" focus-on="button.focusOn" title="Preview or Print (Shortcut: p)">                        <span class="notebook-icon-print library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Preview</span>                    </a><!-- end ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><a class="btn btn-default user-library-button ng-scope" ng-if="button.type == &#39;link&#39; &amp;&amp; !((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" href="https://notebooks.azure.com/Shrija/libraries/FinalProject/edit/HousePricePrediction.ipynb" ng-click="button.click($ctrl.data.items.selected)" target="" focus-on="button.focusOn" title="Edit File (Shortcut: i)">                        <span class="notebook-icon-text library-button-icon"></span>                        <span class="library-button-text ng-binding" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Edit File</span>                    </a><!-- end ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="" title="Download File (Shortcut: d)">                        <span class="notebook-icon-download library-button-icon"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Download</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons --><span ng-repeat="button in $ctrl.data.buttons" class="ng-scope">                <!-- ngIf: !button.hidden && button.contextual != 'menuOnly' --><span ng-if="!button.hidden &amp;&amp; button.contextual != &#39;menuOnly&#39;" class="ng-scope">                    <!-- ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) --><button ng-if="button.type == &#39;action&#39; || ((button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected))" class="btn btn-default user-library-button pagedDataButton ng-scope" ng-click="button.click($ctrl.data.items.selected)" ng-disabled="(button.contextual &amp;&amp; $ctrl.data.items.getContextButtonsDisabled() &amp;&amp; !button.contextAlwaysOn) || button.getDisabled($ctrl.data.items.selected)" focus-on="" title="Delete File (Shortcut: x)">                        <span class="notebook-icon-trash library-button-icon"></span>                        <span class="library-button-text ng-binding library-button-text-lowpri" ng-class="button.textPriority == &#39;low&#39; ? &#39;library-button-text-lowpri&#39;: &#39;&#39;">Delete</span>                    </button><!-- end ngIf: button.type == 'action' || ((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                    <!-- ngIf: button.action.type == 'separator' -->                    <!-- ngIf: button.type == 'link' && !((button.contextual && $ctrl.data.items.getContextButtonsDisabled() && !button.contextualAlwaysOn) || button.getDisabled($ctrl.data.items.selected)) -->                </span><!-- end ngIf: !button.hidden && button.contextual != 'menuOnly' -->            </span><!-- end ngRepeat: button in $ctrl.data.buttons -->        </div>    </div>    <!-- Filter UI -->    <div class="input-group">        <!-- ngRepeat: filter in $ctrl.data.filters.controls --><div class="filter-bar ng-scope" ng-repeat="filter in $ctrl.data.filters.controls">            <!-- ngIf: filter.kind=='search' --><span ng-if="filter.kind==&#39;search&#39;" class="searchFilter ng-scope libFilterSearch" ng-class="filter.inProgress ? &#39;libFilterSearchInProgress&#39; : &#39;libFilterSearch&#39;">                <label for="search" style="display:none" id="search">Search</label>                <input type="search" ng-model="filter.search" title="Search" placeholder="Search" class="ng-pristine ng-untouched ng-valid ng-empty">            </span><!-- end ngIf: filter.kind=='search' -->            <!-- ngIf: filter.kind=='dropdown' -->            <!-- ngIf: filter.kind=='toggle' -->        </div><!-- end ngRepeat: filter in $ctrl.data.filters.controls --><div class="filter-bar ng-scope" ng-repeat="filter in $ctrl.data.filters.controls">            <!-- ngIf: filter.kind=='search' -->            <!-- ngIf: filter.kind=='dropdown' -->            <!-- ngIf: filter.kind=='toggle' --><span ng-if="filter.kind==&#39;toggle&#39;" class="paged-filters ng-scope">                <button class="btn btn-default user-library-button ng-binding inactive" title="" ng-click="filter.click()" ng-class="filter.active ? &#39;active&#39; : &#39;inactive&#39;">                    Show hidden items                </button>            </span><!-- end ngIf: filter.kind=='toggle' -->        </div><!-- end ngRepeat: filter in $ctrl.data.filters.controls -->    </div>    <!-- Table -->    <ng-transclude>                <table role="grid" class="table display no-footer user-library-table ng-scope" aria-label="Showing 3 search results (1 hidden)">                    <thead>                        <tr role="row">                            <th role="columnheader" width="*" sort-column="path" class="ng-isolate-scope"><div>    <a href="https://notebooks.azure.com/" ng-click="$ctrl.setSortProperty()">        <ng-transclude><span class="ng-scope">File name</span></ng-transclude>        <!-- ngIf: $ctrl.chevronDown --><span class="glyphicon glyphicon-chevron-down ng-scope" ng-if="$ctrl.chevronDown"></span><!-- end ngIf: $ctrl.chevronDown -->        <!-- ngIf: $ctrl.chevronUp -->    </a></div></th>                            <!-- ngIf: $ctrl.filters.values.path !== undefined && $ctrl.filters.values.path.length -->                            <th role="columnheader" width="100" sort-column="modified" class="ng-isolate-scope"><div>    <a href="https://notebooks.azure.com/" ng-click="$ctrl.setSortProperty()">        <ng-transclude><span class="ng-scope">File type</span></ng-transclude>        <!-- ngIf: $ctrl.chevronDown -->        <!-- ngIf: $ctrl.chevronUp -->    </a></div></th>                            <th role="columnheader" width="100" sort-column="modified" class="ng-isolate-scope"><div>    <a href="https://notebooks.azure.com/" ng-click="$ctrl.setSortProperty()">        <ng-transclude><span class="ng-scope">Modified</span></ng-transclude>        <!-- ngIf: $ctrl.chevronDown -->        <!-- ngIf: $ctrl.chevronUp -->    </a></div></th>                        </tr>                    </thead>                    <tbody>                        <!-- ngRepeat: file in data.items.displayed --><!-- ngIf: data.items.displayed --><tr role="row" ng-repeat="file in data.items.displayed" context-menu="data.contextMenu" ng-if="data.items.displayed" ng-class="data.items.getRowClass(file)" ng-click="data.items.selectRow(file)" ng-init="contextItem = file" class="ng-scope user-library-table-selected">                            <td role="gridcell" aria-label="HousePricePrediction.ipynb">                                <a href="https://notebooks.azure.com/run/Shrija/FinalProject?dest=/notebooks/HousePricePrediction.ipynb" target="_blank">                                    <span ng-class="$ctrl.getFileIcon(file)" class="notebook-icon-notebook_outline"></span>&nbsp;                                    <!-- ngIf: $ctrl.renameInProgressForFile.path!==file.path --><span ng-if="$ctrl.renameInProgressForFile.path!==file.path" class="ng-binding ng-scope">                                        HousePricePrediction.ipynb                                    </span><!-- end ngIf: $ctrl.renameInProgressForFile.path!==file.path -->                                </a>                                <div ng-show="$ctrl.renameInProgressForFile &amp;&amp; $ctrl.renameInProgressForFile.path===file.path" class="force-inline ng-hide">                                    <form ng-submit="$ctrl.rename()" class="force-inline ng-pristine ng-valid" stop-click-propogation="">                                        <input class="input-field inline-rename-input ng-pristine ng-untouched ng-valid ng-empty" type="text" ng-model="$ctrl.newFileName" autocomplete="off" size="15" title="File Name" focus-on="renameFileFocus" placeholder="File Name" on-escape="$ctrl.cancelRename()">                                    </form>                                </div>                            </td>                            <!-- ngIf: $ctrl.filters.values.path !== undefined && $ctrl.filters.values.path.length -->                            <td role="gridcell" class="ng-binding">Notebook</td>                            <!-- ngIf: !file.isDirectory --><td role="gridcell" ng-if="!file.isDirectory" title="Nov 27, 2017 1:44:20 PM" class="ng-binding ng-scope">Nov 27, 2017</td><!-- end ngIf: !file.isDirectory -->                            <!-- ngIf: file.isDirectory -->                        </tr><!-- end ngIf: data.items.displayed --><!-- end ngRepeat: file in data.items.displayed --><!-- ngIf: data.items.displayed --><tr role="row" ng-repeat="file in data.items.displayed" context-menu="data.contextMenu" ng-if="data.items.displayed" ng-class="data.items.getRowClass(file)" ng-click="data.items.selectRow(file)" ng-init="contextItem = file" class="ng-scope">                            <td role="gridcell" aria-label="housing.csv">                                <a href="https://notebooks.azure.com/Shrija/libraries/FinalProject/html/housing.csv" target="_self">                                    <span ng-class="$ctrl.getFileIcon(file)" class="notebook-icon-text"></span>&nbsp;                                    <!-- ngIf: $ctrl.renameInProgressForFile.path!==file.path --><span ng-if="$ctrl.renameInProgressForFile.path!==file.path" class="ng-binding ng-scope">                                        housing.csv                                    </span><!-- end ngIf: $ctrl.renameInProgressForFile.path!==file.path -->                                </a>                                <div ng-show="$ctrl.renameInProgressForFile &amp;&amp; $ctrl.renameInProgressForFile.path===file.path" class="force-inline ng-hide">                                    <form ng-submit="$ctrl.rename()" class="force-inline ng-pristine ng-valid" stop-click-propogation="">                                        <input class="input-field inline-rename-input ng-pristine ng-untouched ng-valid ng-empty" type="text" ng-model="$ctrl.newFileName" autocomplete="off" size="15" title="File Name" focus-on="renameFileFocus" placeholder="File Name" on-escape="$ctrl.cancelRename()">                                    </form>                                </div>                            </td>                            <!-- ngIf: $ctrl.filters.values.path !== undefined && $ctrl.filters.values.path.length -->                            <td role="gridcell" class="ng-binding">CSV</td>                            <!-- ngIf: !file.isDirectory --><td role="gridcell" ng-if="!file.isDirectory" title="Nov 27, 2017 1:44:44 PM" class="ng-binding ng-scope">Nov 27, 2017</td><!-- end ngIf: !file.isDirectory -->                            <!-- ngIf: file.isDirectory -->                        </tr><!-- end ngIf: data.items.displayed --><!-- end ngRepeat: file in data.items.displayed --><!-- ngIf: data.items.displayed --><tr role="row" ng-repeat="file in data.items.displayed" context-menu="data.contextMenu" ng-if="data.items.displayed" ng-class="data.items.getRowClass(file)" ng-click="data.items.selectRow(file)" ng-init="contextItem = file" class="ng-scope">                            <td role="gridcell" aria-label="README.md">                                <a href="https://notebooks.azure.com/Shrija/libraries/FinalProject/html/README.md" target="_self">                                    <span ng-class="$ctrl.getFileIcon(file)" class="notebook-icon-text"></span>&nbsp;                                    <!-- ngIf: $ctrl.renameInProgressForFile.path!==file.path --><span ng-if="$ctrl.renameInProgressForFile.path!==file.path" class="ng-binding ng-scope">                                        README.md                                    </span><!-- end ngIf: $ctrl.renameInProgressForFile.path!==file.path -->                                </a>                                <div ng-show="$ctrl.renameInProgressForFile &amp;&amp; $ctrl.renameInProgressForFile.path===file.path" class="force-inline ng-hide">                                    <form ng-submit="$ctrl.rename()" class="force-inline ng-pristine ng-valid" stop-click-propogation="">                                        <input class="input-field inline-rename-input ng-pristine ng-untouched ng-valid ng-empty" type="text" ng-model="$ctrl.newFileName" autocomplete="off" size="15" title="File Name" focus-on="renameFileFocus" placeholder="File Name" on-escape="$ctrl.cancelRename()">                                    </form>                                </div>                            </td>                            <!-- ngIf: $ctrl.filters.values.path !== undefined && $ctrl.filters.values.path.length -->                            <td role="gridcell" class="ng-binding">Markdown</td>                            <!-- ngIf: !file.isDirectory --><td role="gridcell" ng-if="!file.isDirectory" title="Nov 27, 2017 1:41:12 PM" class="ng-binding ng-scope">Nov 27, 2017</td><!-- end ngIf: !file.isDirectory -->                            <!-- ngIf: file.isDirectory -->                        </tr><!-- end ngIf: data.items.displayed --><!-- end ngRepeat: file in data.items.displayed -->                        <!-- ngIf: $ctrl.items.isEmptySearch() -->                        <!-- ngIf: $ctrl.items.isEmpty() && $ctrl.isOwner -->                        <!-- ngIf: $ctrl.items.isEmpty() && !$ctrl.isOwner -->                    </tbody>                </table>            </ng-transclude>    <!-- Pagination -->    <div class="ng-binding">        Showing 3 search results (1 hidden)        <div class="pull-right">            <ul uib-pagination="" title="Page 1" total-items="$ctrl.data.items.filteredCount" ng-model="$ctrl.data.items.pagination.page" previous-text="&lt;" next-text="&gt;" class="ng-pristine ng-untouched ng-valid ng-isolate-scope pagination ng-not-empty"><!-- ngIf: ::boundaryLinks -->
<!-- ngIf: ::directionLinks --><li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev ng-scope disabled"><a href="https://notebooks.azure.com/" ng-click="selectPage(page - 1, $event)" ng-disabled="noPrevious()||ngDisabled" uib-tabindex-toggle="" class="ng-binding" disabled="disabled" tabindex="-1">&lt;</a></li><!-- end ngIf: ::directionLinks -->
<!-- ngRepeat: page in pages track by $index --><li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&amp;&amp;!page.active}" class="pagination-page ng-scope active"><a href="https://notebooks.azure.com/" ng-click="selectPage(page.number, $event)" ng-disabled="ngDisabled&amp;&amp;!page.active" uib-tabindex-toggle="" class="ng-binding">1</a></li><!-- end ngRepeat: page in pages track by $index -->
<!-- ngIf: ::directionLinks --><li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next ng-scope disabled"><a href="https://notebooks.azure.com/" ng-click="selectPage(page + 1, $event)" ng-disabled="noNext()||ngDisabled" uib-tabindex-toggle="" class="ng-binding" disabled="disabled" tabindex="-1">&gt;</a></li><!-- end ngIf: ::directionLinks -->
<!-- ngIf: ::boundaryLinks -->
</ul>        </div>    </div></div></div>            <!-- ngIf: $ctrl.library.description -->            <!-- ngIf: !$ctrl.hasReadme && $ctrl.isOwner -->        </div>    </div></ng-transclude>    </div><!-- end ngIf: !notFound.display --></div></maybe-not-found></div>



    <!-- END BODY -->

    <!-- BEGIN FOOTER -->
<footer class="footer">
    <div class="container">
        <ul>
            <li>
                <a href="https://github.com/Microsoft/AzureNotebooks/issues" ms.title="Contact us" class="ctl_footerNavLink" data-bi-name="Footer_ContactUs" data-bi-slot="1" ms.ea_action="ntd">
                    Contact us
                </a>
            </li>
            <li>
                <a href="https://notebooks.azure.com/faq" ms.title="FAQ" class="ctl_footerNavLink" data-bi-name="Footer_FaqSupport" data-bi-slot="1" ms.ea_action="ntd">
                    FAQ
                </a>
            </li>
            <li>
                <a href="https://go.microsoft.com/fwlink/?LinkId=248681" ms.title="Privacy and cookies " class="ctl_footerNavLink" data-bi-name="Footer_PrivacyandCookies" data-bi-slot="2" ms.ea_action="ntd">
                    Privacy and cookies
                </a>
            </li>
            <li>
                <a href="https://go.microsoft.com/fwlink/?LinkID=530144" ms.title="Terms of use" class="ctl_footerNavLink" data-bi-name="Footer_TermsOfUse" data-bi-slot="3" ms.ea_action="ntd">
                    Terms of use
                </a>
            </li>
            <li>
                <a href="https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/en-us.aspx" ms.title="Trademarks" class="ctl_footerNavLink" data-bi-name="Footer_Trademarks" data-bi-slot="4" ms.ea_action="ntd">
                    Trademarks
                </a>
            </li>

            <li class="copyright">
                Â© 2017 Microsoft
            </li>
        </ul>
    </div>
</footer>

<!-- END FOOTER -->


    <script src="./FinalProject (Shrija) - Microsoft Azure Notebooks_files/bootstrap"></script>



</body></html>